services:
  api:
    # image: node:18
    ports:
      - "3000:3000"
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    networks:
      - backend-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - keycloak
      - db-api
    restart: unless-stopped
  keycloak:
    image: quay.io/keycloak/keycloak:25.0
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db-keycloak/qrmdb
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin
      - KC_FEATURES=token-exchange
      - KC_HOSTNAME=localhost
    command: start-dev
    depends_on:
      - db-keycloak
    networks:
      - backend-network

  db-keycloak:
    image: postgres:16.3-alpine3.19
    ports:
      - "5432:5432"
    networks:
      - backend-network
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=qrmdb
      - POSTGRES_USER=admin
      - PG_DATA=/var/lib/postgresql/data
    volumes:
      - postgres_keycloak:/var/lib/postgresql/data

  db-api:
    image: postgres:16.3-alpine3.19
    ports:
      - "5434:5434"
    networks:
      - backend-network
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=qrmdb
      - POSTGRES_USER=admin
      - PG_DATA=/var/lib/postgresql/data
    volumes:
      - postgres_api:/var/lib/postgresql/data

networks:
  backend-network:


volumes:
  postgres_keycloak:
    driver: local
  postgres_api:
    driver: local
